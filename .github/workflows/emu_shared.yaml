name: Fetch & Build MacroQuest [EMU] 

on:
  workflow_call:
    inputs:
      client_target:
        required: true
        type: string

env:
  config: Release
  platform: "${{ inputs.client_target == 'emu' && 'Win32' || 'x64' }}"
  branch: "${{ inputs.client_target == 'emu' && 'emu' || 'master' }}"

jobs:
  fetch:
    name: Fetch Macroquest with Plugins
    runs-on: [windows-2022]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.branch }}
          submodules: recursive
      
      - name: Add MQActorFollow to submodules
        run: git submodule add -f https://github.com/peonMQ/MQActorFollow.git plugins/MQActorFollow

      - name: Add MQ2AdvPath to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2AdvPath.git plugins/mq2advpath

      - name: Add MQ2AutoAccept to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2AutoAccept.git plugins/mq2autoaccept
        
      - name: Add MQ2BardSwap to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2BardSwap.git plugins/mq2bardswap
      
      - name: Add MQ2ConstantAffinity to submodules
        run: git submodule add -b main -f https://github.com/martinlindhe/MQ2ConstantAffinity.git plugins/mq2constantaffinity
      
      - name: Add MQ2Dan to submodules
        run: git submodule add -b master -f https://github.com/dannuic/MQ2Dan.git plugins/mq2Dan
      
      - name: Add MQ2DotNet to submodules
        run: git submodule add -b master -f https://github.com/projecteon/MQ2DotNet.git plugins/mq2dotnet
      
      - name: Add MQ2EasyFind to submodules
        run: git submodule add -b master -f https://github.com/brainiac/MQ2EasyFind.git plugins/MQ2EasyFind
      
      - name: Add MQ2EQBC to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2EQBC.git plugins/mq2eqbc
        
      - name: Add MQ2Exchange to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2Exchange.git plugins/mq2exchange
         
      - name: Add MQ2LinkDB to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2LinkDB.git plugins/mq2linkdb
        
      - name: Add MQ2Medley to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2Medley.git plugins/mq2medley
        
      - name: Add MQ2MoveUtils to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2MoveUtils.git plugins/mq2moveutils
         
      - name: Add MQNav to submodules
        run: git submodule add -f https://github.com/brainiac/MQ2Nav.git plugins/mq2nav
       
      - name: Add MQ2NetBots to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2NetBots.git plugins/mq2netbots
      
      - name: Add MQ2SpawnMaster to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2SpawnMaster.git plugins/mq2spawnmaster
        
      - name: Add MQ2Twist to submodules
        run: git submodule add -f https://gitlab.com/redguides/plugins/MQ2Twist.git plugins/mq2twist
        
      - name: Add MQ2Cast to submodules
        run: git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Cast.git plugins/MQ2Cast
        
      - name: Add MQ2Debuffs to submodules
        run: git submodule add -b master -f https://gitlab.com/redguides/plugins/MQ2Debuffs.git plugins/MQ2Debuffs

      - name: Update submoules
        run: git submodule update --init --recursive

      - name: Update vcpkg
        run: |
            cd contrib\vcpkg
            Get-Location | Foreach-Object { Write-Output $_.Path }
            Get-ChildItem | Foreach-Object { Write-Output $_ }
            git checkout macroquest
            git pull
            Start-Process -FilePath ".\bootstrap-vcpkg.bat" -Wait
            cd ..\..
        shell: pwsh

      - name: Cache source for next job
        uses: actions/cache/save@v4
        id: cache-source
        with:
          path: ${{ github.workspace }}
          key: ${{ runner.os }}-source-${{ env.platform }}

  build:
    name: Build Macroquest
    runs-on: [windows-2022]
    needs: fetch
    outputs:
      config: ${{ env.config }}
      platform: ${{ env.platform }}
    steps:
      - name: Restore cache of source
        uses: actions/cache/restore@v4
        id: restore-cache-source
        with:
          path: ${{ github.workspace }}
          key: ${{ runner.os }}-source-${{ env.platform }}
      
      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v2

      - name: Check build version
        shell: pwsh
        run: msbuild -version

      - name: vcpkg Cache
        id: cache-vcpkg
        uses: actions/cache@v4
        with:
          path: |
            contrib/vcpkg/buildtrees
            contrib/vcpkg/downloads
            contrib/vcpkg/installed
            contrib/vcpkg/packages
            contrib/vcpkg/vcpkg.exe
            contrib/vcpkg/vcpkg_mq_last_bootstrap*.txt
          key: ${{ runner.os }}-vcpkg-${{ env.platform }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ env.platform }}-

      - name: Build Macroquest
        shell: pwsh
        run: msbuild src/MacroQuest.sln /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}
      
      - name: Build MQ2EQBC Server
        run: msbuild plugins/mq2eqbc/server/EQBCS.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQActorFollow
        run: msbuild plugins/MQActorFollow/MQActorFollow.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2AdvPath
        run: msbuild plugins/mq2advpath/MQ2AdvPath.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2AutoAccept
        run: msbuild plugins/mq2autoaccept/MQ2AutoAccept.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2BardSwap
        run: msbuild plugins/mq2bardswap/MQ2BardSwap.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2ConstantAffinity
        run: msbuild plugins/mq2constantaffinity/MQ2ConstantAffinity.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2Dannet
        run: msbuild plugins/mq2Dan/MQ2DanNet/MQ2DanNet.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2DotNet
        run: msbuild plugins/mq2dotnet/MQ2DotNet/MQ2DotNet.csproj /restore /p:Configuration=${{env.config}} /p:Platform=${{env.platform}} /p:OutputPath=..\MQ2DotNetLoader\resources

      - name: Build MQ2DotNetLoader
        run: msbuild plugins/mq2dotnet/MQ2DotNetLoader/MQ2DotNetLoader.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2EasyFind
        run: msbuild plugins/MQ2EasyFind/MQ2EasyFind.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2EQBC
        run: msbuild plugins/mq2eqbc/MQ2EQBC.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2Exchange
        run: msbuild plugins/mq2exchange/MQ2Exchange.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

    #   - name: Build MQ2LinkDB
    #     run: msbuild plugins/mq2linkdb/MQ2LinkDB.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2Medley
        run: msbuild plugins/mq2medley/MQ2Medley.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2MoveUtils
        run: msbuild plugins/mq2moveutils/MQ2MoveUtils.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQNav
        run: msbuild plugins/mq2nav/MQ2Nav.sln /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2NetBots
        run: msbuild plugins/mq2netbots/MQ2NetBots.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2SpawnMaster
        run: msbuild plugins/mq2spawnmaster/MQ2SpawnMaster.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2Twist
        run: msbuild plugins/mq2twist/MQ2Twist.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2Cast
        run: msbuild plugins/MQ2Cast/MQ2Cast.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Build MQ2Debuffs
        run: msbuild plugins/MQ2Debuffs/MQ2Debuffs.vcxproj /p:Configuration=${{env.config}} /p:Platform=${{env.platform}}

      - name: Cache build artifacts
        uses: actions/cache/save@v4
        id: cache-build
        with:
          path: ${{ github.workspace }}\build\bin\${{env.config}}
          key: ${{ runner.os }}-artifacts-${{ env.platform }}
    
      - name: Cleanup source cache
        shell: bash
        run: |
          gh extension install actions/gh-actions-cache
          
          REPO=${{ github.repository }}
          BRANCH=${{ env.branch }}

          cacheKey=${{ runner.os }}-source-${{ env.platform }}

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting source cache..."
          gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

